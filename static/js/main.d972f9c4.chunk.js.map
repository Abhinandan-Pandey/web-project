{"version":3,"sources":["shared/components/FormElements/Button.js","shared/components/UIElements/LoadingSpinner.js","shared/context/auth-context.js","shared/util/validators.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/FormElements/Input.js","shared/components/UIElements/Card.js","shared/components/UIElements/Modal.js","shared/hooks/form-hook.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","user/pages/Auth.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","LoadingSpinner","asOverlay","AuthContext","createContext","isLoggedIn","login","logout","userId","token","VALIDATOR_REQUIRE","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","value","validators","isValid","validator","trim","length","test","ErrorModal","onCancel","onClear","header","show","error","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","Card","style","ModalOverlay","content","headerClass","onSubmit","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","Backdrop","logoutTimer","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","click","NewPlace","auth","useContext","title","description","address","image","inputHandler","history","useHistory","placeSubmitHandler","formData","FormData","append","process","Authorization","Map","mapRef","zoom","window","ol","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","PlaceItem","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","onDelete","coordinates","creatorId","PlaceList","items","map","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","places","fetchPlaces","deletedPlaceId","prevPlaces","Auth","isLoginMode","setIsLoginMode","email","password","setFormData","authSubmitHandler","JSON","stringify","name","undefined","prevMode","MainHeader","NavLinks","SideDrawer","CSSTransition","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","UpdatePlace","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","fallback","render"],"mappings":"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","file":"static/js/main.d972f9c4.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  login: () => {},\n  logout: () => {},\n  userId: null,\n  token:null,\n});\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient=()=>{\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest=useCallback(\r\n      async (url,method = 'GET', body = null, headers = {})=>{\r\n        setIsLoading(true);\r\n        const httpAbortCtrl = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortCtrl)\r\n     \r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body, \r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n        const responseData = await response.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n            reqCtrl => reqCtrl !== httpAbortCtrl\r\n          );\r\n\r\n          if (!response.ok) {\r\n            throw new Error(responseData.message);\r\n          }\r\n  \r\n          setIsLoading(false);\r\n          return responseData;\r\n        } catch (err) {\r\n          setError(err.message);\r\n          setIsLoading(false);\r\n          throw err;\r\n        }\r\n    },[]\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case 'CHANGE':\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case 'TOUCH': {\n      return {\n        ...state,\n        isTouched: true\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || '',\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({\n      type: 'CHANGE',\n      val: event.target.value,\n      validators: props.validators\n    });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === 'input' ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        'form-control--invalid'}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth=()=>{\r\nconst [token, setToken] = useState(false);\r\nconst [userId, setUserId] = useState(false);\r\nconst [tokenExpirationDate,setTokenExpirationDate]=useState();\r\n\r\nconst login = useCallback((uid,token,expirationDate) => {\r\n  setToken(token);\r\n  setUserId(uid);\r\n  const tokenExpirationDate=expirationDate||new Date(new Date().getTime()+1000*60*60);\r\n  setTokenExpirationDate(tokenExpirationDate);\r\n  localStorage.setItem(\r\n    'userData',\r\n    JSON.stringify({\r\n      userId:uid,\r\n      token:token,\r\n      expiration:tokenExpirationDate.toISOString(),\r\n    })\r\n  )\r\n}, []);\r\n\r\nconst logout = useCallback(() => {\r\n  setToken(null);\r\n  setUserId(null);\r\n  setTokenExpirationDate(null);\r\n  localStorage.removeItem('userData');\r\n}, []);\r\n\r\nuseEffect(()=>{\r\n  if(token && tokenExpirationDate){\r\n    const remainingTime=tokenExpirationDate.getTime()-new Date().getTime();\r\n    logoutTimer=setTimeout(logout,remainingTime);\r\n  }else{\r\n    clearTimeout(logoutTimer);\r\n  }\r\n},[token,tokenExpirationDate,logout])\r\n\r\nuseEffect(()=>{\r\n  const storedData=JSON.parse(localStorage.getItem('userData'));\r\n  if(\r\n    storedData && \r\n    storedData.token &&\r\n    new Date(storedData.expiration)>new Date()\r\n  ){\r\n    login(storedData.userId,storedData.token,new Date(storedData.expiration));\r\n  }\r\n},[login]);\r\n\r\nreturn  {token ,login,logout,userId}\r\n}\r\n","import React, { useRef, useState, useEffect } from 'react';\r\n\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\n\r\nconst ImageUpload = props => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n\r\n  const filePickerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    let pickedFile;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    props.onInput(props.id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={props.id}\r\n        ref={filePickerRef}\r\n        style={{ display: 'none' }}\r\n        type=\"file\"\r\n        accept=\".jpg,.png,.jpeg\"\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${props.center && 'center'}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceForm.css';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const history = useHistory();\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', formState.inputs.title.value);\r\n      formData.append('description', formState.inputs.description.value);\r\n      formData.append('address', formState.inputs.address.value);\r\n      formData.append('image', formState.inputs.image.value);\r\n      await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/api/places`, 'POST', formData, {\r\n        Authorization: 'Bearer ' + auth.token\r\n      });\r\n      history.push('/');\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image.\"\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","import React, { useRef, useEffect } from 'react';\n \nimport './Map.css';\n \nconst Map = props => {\n  const mapRef = useRef();\n  \n  const { center, zoom } = props;\n \n  useEffect(() => {\n    new window.ol.Map({\n      target: mapRef.current.id,\n      layers: [\n        new window.ol.layer.Tile({\n          source: new window.ol.source.OSM()\n        })\n      ],\n      view: new window.ol.View({\n        center: window.ol.proj.fromLonLat([center.lng, center.lat]),\n        zoom: zoom\n      })\n    });\n  }, [center, zoom]);\n \n  return (\n    <div\n      ref={mapRef}\n      className={`map ${props.className}`}\n      style={props.style}\n      id=\"map\"\n    ></div>\n  );\n};\n \nexport default Map;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const auth = useContext(AuthContext);\n  const [showMap, setShowMap] = useState(false);\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n\n  const openMapHandler = () => setShowMap(true);\n\n  const closeMapHandler = () => setShowMap(false);\n\n  const showDeleteWarningHandler = () => {\n    setShowConfirmModal(true);\n  };\n\n  const cancelDeleteHandler = () => {\n    setShowConfirmModal(false);\n  };\n\n  const confirmDeleteHandler = async() => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/api/places/${props.id}`,\n        'DELETE',\n        null,\n       { Authorization: 'Bearer ' + auth.token}\n      );\n      props.onDelete(props.id);\n    } catch (err) {}\n  };\n// console.log(process.env.REACT_APP_BACKEND_URL)\n  return (\n    <React.Fragment>\n       <ErrorModal error={error} onClear={clearError} />\n      <Modal\n        show={showMap}\n        onCancel={closeMapHandler}\n        header={props.address}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal\n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header=\"Are you sure?\"\n        footerClass=\"place-item__modal-actions\"\n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>\n              CANCEL\n            </Button>\n            <Button danger onClick={confirmDeleteHandler}>\n              DELETE\n            </Button>\n          </React.Fragment>\n        }\n      >\n        <p>\n          Do you want to proceed and delete this place? Please note that it\n          can't be undone thereafter.\n        </p>\n      </Modal>\n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n        {isLoading && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={`${process.env.REACT_APP_BACKEND_URL}/${props.image}`} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>\n              VIEW ON MAP\n            </Button>\n            {auth.userId === props.creatorId && (\n              <Button to={`/places/${props.id}`}>EDIT</Button>\n            )}\n\n            {auth.userId === props.creatorId &&(\n              <Button danger onClick={showDeleteWarningHandler}>\n                DELETE\n              </Button>\n            )}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport Button from '../../shared/components/FormElements/Button';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n  if (props.items.length === 0) {\n    return (\n      <div className=\"place-list center\">\n        <Card>\n          <h2>No places found. Maybe create one?</h2>\n          <Button to=\"/places/new\">Share Place</Button>\n        </Card>\n      </div>\n    );\n  }\n\n  return (\n    <ul className=\"place-list\">\n      {props.items.map(place => (\n        <PlaceItem\n          key={place.id}\n          id={place.id}\n          image={place.image}\n          title={place.title}\n          description={place.description}\n          address={place.address}\n          creatorId={place.creator}\n          coordinates={place.location}\n          onDelete={props.onDeletePlace}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\n\nconst UserPlaces = () => {\n  const [loadedPlaces, setLoadedPlaces] = useState();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const userId = useParams().userId;\n\n  useEffect(() => {\n    const fetchPlaces = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/places/user/${userId}`\n        );\n        setLoadedPlaces(responseData.places);\n      } catch (err) {}\n    };\n    fetchPlaces();\n  }, [sendRequest, userId]);\n\n  const placeDeletedHandler = deletedPlaceId => {\n    setLoadedPlaces(prevPlaces =>\n      prevPlaces.filter(place => place.id !== deletedPlaceId)\n    );\n  };\n  \n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {isLoading && (\n        <div className=\"center\">\n          <LoadingSpinner />\n        </div>\n      )}\n      {!isLoading && loadedPlaces && (\n        <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />\n      )}\n    </React.Fragment>\n  );\n\n};\n\nexport default UserPlaces;\n","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './Auth.css';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: {\n        value: '',\n        isValid: false\n      },\n      password: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: '',\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const authSubmitHandler = async event => {\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/login`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId,responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/api/users/signup`,\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId,responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload\n              center\n              id=\"image\"\n              onInput={inputHandler}\n              errorText=\"Please provide an image.\"\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address.\"\n            onInput={inputHandler}\n          />\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password, at least 6 characters.\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? 'LOGIN' : 'SIGNUP'}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n        </li>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n      {auth.isLoggedIn && (\n        <li>\n          <button onClick={auth.logout}>LOGOUT</button>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\nimport './MainNavigation.css';\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n\n  return (\n    <React.Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className=\"main-navigation__menu-btn\"\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React,{Suspense} from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from 'react-router-dom';\n\n// import Users from './user/pages/Users';\nimport NewPlace from './places/pages/NewPlace';\nimport UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\nimport Auth from './user/pages/Auth';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport {useAuth} from './shared/hooks/auth-hook';\nimport LoadinSpinner from './shared/components/UIElements/LoadingSpinner';\n\nconst Users =React.lazy(()=>import('./user/pages/Users'));\nconst UpdatePlace =React.lazy(()=>import('./places/pages/UpdatePlace'));\n\nconst App = () => {\n\n  const {token,userId,login,logout}=useAuth();\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n         isLoggedIn:!!token,\n         token: token,\n         userId: userId,\n         login: login,\n         logout: logout\n         }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n          fallback={\n            <div className='center'>\n              <LoadinSpinner/>\n            </div>\n          }>\n          {routes}\n          </Suspense>\n          </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}